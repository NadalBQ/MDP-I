knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(mice)
library(knitr)
datos = read_excel("RatonesLimpios.xlsx", col_names = TRUE)
head(datos, 3)
descRatones = data.frame("variable" = colnames(datos),
"tipo" = c("categorical", rep("numerical", 75),
rep("binary", 3), "categorical"), stringsAsFactors = FALSE)
rownames(descRatones) = descRatones$variable
descRatones
# Apply centering ONLY to the final list of numeric columns
datos[,2:76] <- scale(datos[,2:76], center = TRUE, scale = FALSE)
# View first 3 rows
head(datos, 3)
library(FactoMineR)
library(factoextra)
res.pca_sin = PCA(datos, scale.unit = FALSE, graph = FALSE, ncp = 10,
quali.sup = which(descRatones$tipo == "categorical"),
quanti.sup = 77:79)
eig.val_sin <- get_eigenvalue(res.pca_sin)
VPmedio_sin = 100 * (1/nrow(eig.val_sin))
fviz_eig(res.pca_sin, addlabels = TRUE) +
geom_hline(yintercept=VPmedio_sin, linetype=2, color="red")
kable(eig.val_sin[1:6,])
K_sin = 3
res.pca_sin2 = PCA(datos, scale.unit = FALSE, graph = FALSE, ncp = K_sin,
quali.sup = which(descRatones$tipo == "categorical"),
quanti.sup = 77:79)
misScores = res.pca_sin2$ind$coord[,1:K_sin]
miT2 = colSums(t(misScores**2)/eig.val_sin[1:K_sin,1])
I = nrow(datos)
F95 = K_sin*(I**2 - 1)/(I*(I - K_sin)) * qf(0.95, K_sin, I-K_sin)
F99 = K_sin*(I**2 - 1)/(I*(I - K_sin)) * qf(0.99, K_sin, I-K_sin)
plot(1:length(miT2), miT2, type = "p", xlab = "Ratones", ylab = "T2")
abline(h = F95, col = "orange", lty = 2, lwd = 2)
abline(h = F99, col = "red3", lty = 2, lwd = 2)
anomalas = which(miT2 > F95)
anomalas
library(grid)
library(gridExtra)
p1 = fviz_pca_ind(res.pca_sin2, axes = c(1,2), geom = c("point"),
habillage = factor(miT2 > F95)) +
tune::coord_obs_pred()
p2 = fviz_pca_ind(res.pca_sin2, axes = c(1,3), geom = c("point"),
habillage = factor(miT2 > F95)) +
tune::coord_obs_pred()
grid.arrange(p1,p2, nrow = 1)
fviz_pca_var(res.pca_sin2, axes = c(1,2), repel = TRUE, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
fviz_pca_var(res.pca_sin2, axes = c(1,3), repel = TRUE, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
library(FactoMineR)
library(factoextra)
res.pca_con = PCA(datos, scale.unit = TRUE, graph = FALSE, ncp = 10,
quali.sup = which(descRatones$tipo == "categorical"),
quanti.sup = 77:79)
eig.val_con <- get_eigenvalue(res.pca_con)
VPmedio_con = 100 * (1/nrow(eig.val_con))
fviz_eig(res.pca_con, addlabels = TRUE) +
geom_hline(yintercept=VPmedio_con, linetype=2, color="red")
kable(eig.val_con[1:6,])
K_con = 4
res.pca_con2 = PCA(datos, scale.unit = TRUE, graph = FALSE, ncp = K_con,
quali.sup = which(descRatones$tipo == "categorical"),
quanti.sup = 77:79)
misScores_con = res.pca_con2$ind$coord[,1:K_con]
miT2_con = colSums(t(misScores_con**2)/eig.val_con[1:K_con,1])
I_con = nrow(datos)
F95_con = K_con*(I_con**2 - 1)/(I_con*(I_con - K_con)) * qf(0.95, K_con, I-K_con)
F99_con = K_con*(I_con**2 - 1)/(I_con*(I_con - K_con)) * qf(0.99, K_con, I-K_con)
plot(1:length(miT2_con), miT2_con, type = "p", xlab = "Ratones", ylab = "T2")
abline(h = F95_con, col = "orange", lty = 2, lwd = 2)
abline(h = F99_con, col = "red3", lty = 2, lwd = 2)
anomalas_con = which(miT2_con > F95_con)
anomalas_con
library(grid)
library(gridExtra)
p1_con = fviz_pca_ind(res.pca_con2, axes = c(1,2), geom = c("point"),
habillage = factor(miT2_con > F95_con)) +
tune::coord_obs_pred()
p2_con = fviz_pca_ind(res.pca_con2, axes = c(1,3), geom = c("point"),
habillage = factor(miT2_con > F95_con)) +
tune::coord_obs_pred()
grid.arrange(p1_con,p2_con, nrow = 1)
fviz_pca_var(res.pca_con2, axes = c(1,2), repel = TRUE, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
fviz_pca_var(res.pca_con2, axes = c(1,3), repel = TRUE, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
